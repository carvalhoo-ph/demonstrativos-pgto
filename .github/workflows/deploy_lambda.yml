name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -t package pymysql pytest pytest-mock

      - name: Package Lambda function
        run: |
          mkdir -p package
          cp lambda_function.py package/
          cp config.py package/
          cd package
          zip -r ../lambda_function.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to AWS Lambda
        run: |
          if aws lambda get-function --function-name demonstrativo-pgto; then
            aws lambda update-function-code --function-name demonstrativo-pgto --zip-file fileb://lambda_function.zip
            sleep 30
            aws lambda update-function-configuration --function-name demonstrativo-pgto --timeout 600 --vpc-config SubnetIds=subnet-07daf515b678c9259,subnet-0843c227a61d10bb5,SecurityGroupIds=sg-0e22de86e3b608b71
          else
            aws lambda create-function --function-name demonstrativo-pgto --runtime python3.8 --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/lambda_exec_role_NkIxpPdd --handler lambda_function.lambda_handler --zip-file fileb://lambda_function.zip --timeout 600 --vpc-config SubnetIds=subnet-07daf515b678c9259,subnet-0843c227a61d10bb5,SecurityGroupIds=sg-0e22de86e3b608b71
          fi

      - name: Wait for Lambda function update
        run: |
          while [[ $(aws lambda get-function --function-name demonstrativo-pgto --query 'Configuration.LastUpdateStatus') == '"InProgress"' ]]; do
            echo "Waiting for Lambda function update to complete..."
            sleep 10
          done

      - name: Wait for Lambda function to be active
        run: |
          while [[ $(aws lambda get-function --function-name demonstrativo-pgto --query 'Configuration.State') != '"Active"' ]]; do
            echo "Waiting for Lambda function to be active..."
            sleep 10
          done

      - name: Test Lambda function
        run: |
          aws lambda invoke --function-name demonstrativo-pgto --payload '{}' response.json
          cat response.json

      - name: Run unit tests
        run: |
          python -m pip install pymysql pytest pytest-mock
          python -m pytest test_lambda_function.py
